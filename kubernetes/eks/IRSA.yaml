# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql-client-sa
  annotations:
    eks.amazonaws.com/role-arn: <your-role-arn> 

# Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default # Replace with your namespace if needed
  name: mysql-client-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"] 

# Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mysql-client-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mysql-client-role 
subjects:
- kind: ServiceAccount
  name: mysql-client-sa 

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-client
  template:
    metadata:
      labels:
        app: mysql-client
    spec:
      serviceAccountName: mysql-client-sa 
      containers:
      - name: mysql-client
        image: <your-mysql-client-image> 
        env:
        - name: MYSQL_HOST
          value: <your-rds-endpoint> 
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: password

# Secret
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
type: Opaque
data:
  username: <base64-encoded-username> 
  password: <base64-encoded-password>
