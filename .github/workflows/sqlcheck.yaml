name: SQL Deployment Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-sql:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install SQLFluff
      run: |
        python -m pip install --upgrade pip
        pip install sqlfluff

    - name: Run SQLFluff Lint
      run: |
        find . -type f -name "*.sql" -exec sqlfluff lint -e LT09,CP01,CP02 --dialect ansi {} +

    - name: Validate SQL Files
      shell: bash
      run: |
        echo "Starting SQL files validation..."
        
        error_found=false
        
        while IFS= read -r file; do
          echo "Checking file: $file"
          
          while IFS= read -r line || [ -n "$line" ]; do
            # Skip liquibase comments and empty lines
            if [[ "$line" =~ ^--liquibase ]] || [[ "$line" =~ ^--changeset ]] || [[ "$line" =~ ^--comment ]] || [[ "$line" =~ ^--rollback ]] || [[ -z "${line// }" ]]; then
              continue
            fi
            
            # Convert to lowercase and remove inline comments
            line_lower=$(echo "$line" | tr '[:upper:]' '[:lower:]' | sed 's/--.*//g')
            
            # Store statement lines
            if [[ "$line_lower" =~ ^[[:space:]]*(update|delete)[[:space:]] ]]; then
              current_statement="$line_lower"
              is_dml=true
            elif [[ $is_dml == true && ! "$line_lower" =~ \; ]]; then
              current_statement="$current_statement $line_lower"
            elif [[ $is_dml == true && "$line_lower" =~ \; ]]; then
              current_statement="$current_statement $line_lower"
              # Check complete statement
              echo "Checking statement: $current_statement"
              if ! [[ "$current_statement" =~ where.*tenant_id.*\; ]]; then
                echo "❌ Error: Missing WHERE TENANT_ID clause in:"
                echo "$current_statement"
                error_found=true
              fi
              is_dml=false
              current_statement=""
            fi
          done < "$file"
        done < <(find . -type f -name "*.sql")
        
        if $error_found; then
          echo "❌ Validation failed"
          exit 1
        else
          echo "✅ All statements validated successfully"
        fi
